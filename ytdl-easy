#!/bin/bash

#Version
VERSION=1.7.0

#Settings
MOVIE="yt-dlp -i --write-thumbnail --write-description --write-info-json --write-playlist-metafiles --write-comments --write-sub --all-subs --write-annotations --add-metadata -f bestvideo+bestaudio --throttled-rate 1M --limit-rate 64M -o"
AUDIO="yt-dlp -i --throttled-rate 1M -f bestaudio -x --audio-format"
NICONICO_MOVIE="yt-dlp -i --write-thumbnail --write-description --write-info-json --write-playlist-metafiles --write-comments --write-sub --sub-lang live_chat -f best --throttled-rate 1M -o"
TWITCH="yt-dlp -i --write-thumbnail --write-description --write-info-json --write-playlist-metafiles --write-comments --write-sub --all-subs --write-annotations --add-metadata --throttled-rate 1M --limit-rate 64M -o"
COOKIEDIR=$HOME"/Documents/cookies/"
MAXTHREAD=5
WEBSITE=ytb
PRFNUM=1


#Help display
function usage {
	cat <<EOM
Usage: $(basename "$0") [OPTION] URL
Usage: cat hoge.txt | $(basename "$0") [OPTION]

Version: $VERSION

[OPTION]
  -a FORMAT, --audio=FORMAT			Specify this option when you want to download only the AUDIO.	
							FORMAT: best, m4a, mp3
							(default): best
							m4a, mp3 are conveted from best.

  -c COOKIE, --cookie=COOKIE			The name of the cookie to use(for YouTube).

  -d DIR, --dir=DIR				Directory for download.

  -h, --help					Display usage.

  -H, --help-all				Display usage-all.

  -i						Display the command before execution.

  -w WEBSITE, --website=WEBSITE			Select the name for download website.
							(default): $WEBSITE
							ytb(YouTube), twitch, niconico

  -p PROFILE, --profile=PROFILE			Select the name format used when saving the video.
							(default): $PRFNUM
							1: title_[ID].ext
							2: title.ext
							3: date-title / title_[ID].ext
							4: date-title-channel_[channelID] / title_[ID].ext
							5: title-channel_[channelID] / title_[ID].ext
							6: channel_[channelID] / date-title / title_[ID].ext
							7: date-[ID] / title.ext

  -U, --upgrade					Upgrade this program(Requires "root").

  --user=USER					Username or Mail(for NicoVideo).

  --pass=PASSWORD				Password(for NicoVideo).

EOM
}

#Help-all display
function usage-all {
        cat <<EOM
Usage: $(basename "$0") [OPTION] URL
Usage: cat hoge.txt | $(basename "$0") [OPTION]

Version: $VERSION

[Must software]
  yt-dlp, ffmpeg, ffprobe, git


[Download type]
  MOVIE(default):                       $MOVIE
  AUDIO:                                $AUDIO


[OPTION]
  -a FORMAT, --audio=FORMAT			Specify this option when you want to download only the AUDIO.
                                       			FORMAT: best, m4a, mp3
                                       			(default): best
                                       			m4a, mp3 are conveted from best.

  -c COOKIE, --cookie=COOKIE           		The name of the cookie to use(for YouTube).

  -d DIR, --dir=DIR                     	Directory for download.

  -h, --help                           		Display usage.

  -H, --help-all                       		Display usage-all.

  -i						Display the command before execution.

  -w WEBSITE, --website=WEBSITE			Select the name for download website.
							(default): $WEBSITE
							ytb(YouTube), twitch, niconico

  -p PROFILE, --profile=PROFILE         	Select the name format used when saving the video.
                                        		(default): $PRFNUM
                                        		1: title_[ID].ext
                                        		2: title.ext
                                        		3: date-title / title_[ID].ext
                                        		4: date-title-channel_[channelID] / title_[ID].ext
                                        		5: title-channel_[channelID] / title_[ID].ext
                                        		6: channel_[channelID] / date-title / title_[ID].ext
							7: date-[ID] / title.ext

  -U, --upgrade                         	Upgrade this program(Requires "root").

  --user=USER					Username or Mail(for NicoVideo).

  --pass=PASSWORD				Password(for NicoVideo).

EOM
}


# Display "usage" when did not enter any arguments.
if [ $# = 0 ]; then
    usage
    exit 1
fi

# Read arguments
while (( $# > 0 ))
do
    case $1 in
	   -a | --audio | --audio=*? )
	        if [[ "$1" =~ ^--audio=* ]]; then 
		    AUDIOFMT=$(echo $1 | sed -e 's/^--audio=//')
		elif [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
		    AUDIOFMT=best
		else
		    AUDIOFMT=$2
		    shift
		fi
	        ;;
	    -c | --cookie | --cookie=*? )
	        if [[ "$1" =~ ^--cookie= ]]; then
		    USECOOKIE="--cookies "$COOKIEDIR$(echo $1 | sed -e 's/^--cookie=//')
		elif [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
		    echo "'cookie' requires an argument."
		    exit 1
		else
		    USECOOKIE="--cookies "$COOKIEDIR$2
		    shift
		fi
		;;
            -d | --dir | --dir=*? )
	        if [[ "$1" =~ ^--dir= ]]; then
		    DLDIR=$(echo $1 | sed -e 's/^--dir=//')
		elif [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
		    echo "'dir' requires an argument."
		    exit 1
		else
		    DLDIR=$2
		    shift
		fi
		;;
	    -h | --help )
		    usage
		    exit 1
		;;
	    -H | --help-all )
		    usage-all
		    exit 1
		;;
	    -i )
		SHOWCMD=1
		;;
	    -w | --website | --website=*? )
	        if [[ "$1" =~ ^--website=* ]]; then 
		    WEBSITE=$(echo $1 | sed -e 's/^--website=//')
		elif [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
	            echo "'website' requires an argument."
                    exit 1
		else
		    WEBSITE=$2
		    shift
		fi
	        ;;
	    -p | --profile | --profile=*? )
		if [[ "$1" =~ ^--profile= ]]; then
                    PRFNUM=$(echo $1 | sed -e 's/^--profile=//')
                elif [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
		    PRFNUM="1"
                else
                    PRFNUM="$2"
                    shift
                fi
                ;;
	    -U | --upgrade )
		echo "Updating..." &&
		rm -fr $HOME/Download/$(basename "$0") &&
		git clone https://github.com/mikan010/ytdl-easy $HOME/Download/$(basename "$0") &&
		cp $HOME/Download/$(basename "$0")/$(basename "$0") /usr/local/bin/ &&
		echo "Complete."
		exit 1
		;;
	    --user | --user= )
		if [[ "$1" =~ ^--user= ]]; then
                    USER="-u "$(echo $1 | sed -e 's/^--user=//')
                elif [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                    echo "'user' requires an argument."
                    exit 1
                else
                    USER="-u "$2
                    shift
                fi
		;;
	    --pass | --pass= )
		if [[ "$1" =~ ^--pass= ]]; then
                    PASS="-p "$(echo $1 | sed -e 's/^--pass=//')
                elif [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                    echo "'user' requires an argument."
                    exit 1
                else
                    PASS="-p "$2
                    shift
                fi
		;;
	    -* )
	        echo "Illegal option -- '$(echo $1 | sed 's/^-*//')'."
		echo ""
		usage
		exit 1
		;;
	    * )
	        if [[ -n "$ARG1" ]]; then
		    echo "Too many arguments."
		    exit 1
		elif [[ "$1" != http* ]]; then
		    echo "$1" "is not URL."
		    exit 1
		else
		    ARG1="$1"
		fi
		;;
    esac
    shift
done

# Config for Profile num.
case "$PRFNUM" in
	"1" ) PRF='%(title)s_[%(id)s].%(ext)s' ;;
	"2" ) PRF='%(title)s.%(ext)s' ;;
        "3" ) PRF='%(release_date,upload_date|Unknown)s-%(title)s/%(title)s_[%(id)s].%(ext)s' ;;
	"4" ) PRF='%(release_date,upload_date|Unknown)s-%(title)s-%(channel)s_[%(channel_id)s]/%(title)s_[%(id)s].%(ext)s' ;;
        "5" ) PRF='%(title)s-%(channel)s_[%(channel_id)s]/%(title)s_[%(id)s].%(ext)s' ;;
	"6" ) PRF='%(channel)s_[%(channel_id)s]/%(release_date,upload_date|Unknown)s-%(title)s/%(title)s_[%(id)s].%(ext)s' ;;
	"7" ) PRF='%(release_date,upload_date|Unknown)s-[%(id)s]/%(title)s.%(ext)s' ;;
	* )
	    echo $PRFNUM "is not supported Profile number (option: -p,--profile)."
	    exit 1
	;;
esac

# Config for Audio format.
case "$AUDIOFMT" in
	"best" ) DLFMT="best" ;;
	"m4a" ) DLFMT="m4a" ;;
	"mp3" ) DLFMT="mp3" ;;
esac

# Process when Audio only or Niconico was seletecte.
if [[ -n "$AUDIOFMT" ]]; then
    EXECCMD="$AUDIO $DLFMT -o $PRF $USECOOKIE"
else
    case "$WEBSITE" in
	"ytb" ) EXECCMD="$MOVIE $PRF $USECOOKIE" ;;
	"twitch" ) EXECCMD="$TWITCH $PRF" ;;
	"niconico" ) EXECCMD="$NICONICO_MOVIE $PRF $USER $PASS" ;;
    esac
fi

# Change directory for DL
cd "$DLDIR"


# DL from argument
if [[ -n "$ARG1" ]] && [[ -n "$SHOWCMD" ]]; then
    echo $EXECCMD $ARG1
    exit 1
fi
if [[ -n "$ARG1" ]]; then
    $EXECCMD $ARG1
    exit 1
fi

# DL from stdin
if [[ -n "$SHOWCMD" ]]; then
    cat | xargs -n 1 -IXXX echo $EXECCMD XXX
    exit 1
fi
cat | xargs -n 1 -P $MAXTHREAD -IXXX $EXECCMD XXX
